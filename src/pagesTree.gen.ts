/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AppRouteImport } from './pages/_app'
import { Route as AppIndexRouteImport } from './pages/_app/index'
import { Route as AppOrderSuccessIndexRouteImport } from './pages/_app/order-success/index'

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppOrderSuccessIndexRoute = AppOrderSuccessIndexRouteImport.update({
  id: '/order-success/',
  path: '/order-success/',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/order-success': typeof AppOrderSuccessIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/order-success': typeof AppOrderSuccessIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/order-success/': typeof AppOrderSuccessIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/order-success'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/order-success'
  id: '__root__' | '/_app' | '/_app/' | '/_app/order-success/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/order-success/': {
      id: '/_app/order-success/'
      path: '/order-success'
      fullPath: '/order-success'
      preLoaderRoute: typeof AppOrderSuccessIndexRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppOrderSuccessIndexRoute: typeof AppOrderSuccessIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppOrderSuccessIndexRoute: AppOrderSuccessIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
